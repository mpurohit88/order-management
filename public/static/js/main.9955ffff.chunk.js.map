{"version":3,"sources":["listItems.js","httpClient.js","orderStatus.js","orderButtonText.js","CustomizedTables.js","Order.js","Dashboard.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","axios","require","a","async","methodType","data","id","status","post","orderStatus","color","orderButtonText","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","orders","updateStatus","classes","loading","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","map","order","key","scope","name","total_price","financial_status","style","fulfillment_status","Date","DateTime_Created","toLocaleString","timeZone","Button","variant","onClick","Number","FormLabel","Order","useState","setOrders","setLoading","useEffect","fetchData","class","Copyright","Typography","Link","href","getFullYear","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Boolean","window","location","hostname","match","ReactDOM","render","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","Box","pt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9955ffff.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Orders\" />\r\n    </ListItem>\r\n  </div>\r\n);","const axios = require('axios');\r\n\r\nexport default {\r\n    getOrders: async () => {\r\n        try {\r\n        const { data } = await axios('/api/getListOfOrder', { methodType: 'GET' }, {});\r\n        return data;\r\n        } catch (error) {\r\n        throw error;\r\n        }\r\n    },\r\n    updateOrderStatus: async (id, status) => {\r\n        try {\r\n        const { data } = await axios.post('/api/updateStatus', {data: {id: id, status: status}});\r\n        return data;\r\n        } catch (error) {\r\n        throw error;\r\n        }\r\n    }\r\n};\r\n","export default function orderStatus(status) {\r\n    switch(status) {\r\n        case '1':\r\n            return {status: 'New Order', color: '#bf360c'};\r\n        case '2':\r\n            return {status: 'Preparing', color: '#827717'};\r\n        case '3':\r\n            return {status: 'Ready', color: '#1b5e20'};\r\n        case '4':\r\n            return {status: 'Delivered', color: '#263238'};\r\n        default:\r\n            return {status: '', color: ''};;\r\n    }\r\n}","export default function orderButtonText(status) {\r\n    switch(status) {\r\n        case '1':\r\n            return {status: 'Start Preparing', color: '#827717'};\r\n        case '2':\r\n            return {status: 'Order Is Ready', color: '#1b5e20'};\r\n        case '3':\r\n            return {status: 'Delivered', color: '#1b5e20'};\r\n        default:\r\n            return {status: 'Done', color: ''};;\r\n    }\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport orderStatus from './orderStatus';\r\nimport orderButtonText from './orderButtonText';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables({orders, updateStatus, loading}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Id</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total Price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Financial Status</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fulfillment Status</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Placed Date/Time</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map(order => (\r\n            <StyledTableRow key={order.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {order.id}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{order.name}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{order.total_price}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{order.financial_status}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><label style={{'padding': '5px', 'color': '#ffffff', 'backgroundColor': ''+orderStatus(order.fulfillment_status).color+''}}>{orderStatus(order.fulfillment_status).status}</label></StyledTableCell>\r\n              <StyledTableCell align=\"right\">{new Date(order.DateTime_Created).toLocaleString(\"en-US\", {timeZone: \"Europe/Berlin\"})}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">\r\n                  {\r\n                      order.fulfillment_status !== '4' ? \r\n<Button variant=\"contained\" color=\"primary\" onClick={() => updateStatus(order.id, Number(order.fulfillment_status) + 1)}>\r\n                {orderButtonText(order.fulfillment_status).status}\r\n             </Button>\r\n             :\r\n             <FormLabel component=\"legend\">{orderButtonText(order.fulfillment_status).status}</FormLabel>\r\n\r\n                  }\r\n              \r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, {useState, useEffect } from 'react';\r\n\r\nimport order from './httpClient.js';\r\nimport CustomizedTables from './CustomizedTables';\r\n\r\nimport './Order.css';\r\n\r\nexport default function Order() {\r\n    const [orders, setOrders] = useState([]);\r\n    const [loading, setLoading] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            const orders = await order.getOrders();\r\n            setOrders(orders);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n      }, []);\r\n  \r\n    async function updateStatus (id, status){\r\n        setLoading(true);\r\n\r\n        const orders = await order.updateOrderStatus(id, status);\r\n\r\n        setOrders(orders);\r\n        setLoading(false);\r\n    }\r\n\r\n      return (\r\n            <div className=\"App\">\r\n                <h2 style={{'display': 'flex'}}>List of Orders  {loading ? <div class=\"spinner\">\r\n                    <div class=\"rect1\"></div>\r\n                    <div class=\"rect2\"></div>\r\n                    <div class=\"rect3\"></div>\r\n                    <div class=\"rect4\"></div>\r\n                    <div class=\"rect5\"></div>\r\n                </div> : ''}</h2>\r\n               \r\n                <CustomizedTables orders={orders} updateStatus={updateStatus}/>\r\n                 \r\n            </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems } from './listItems';\r\nimport Order from './Order';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Bela Bona Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Bella Bona Order Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Order />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}